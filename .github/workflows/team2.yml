name: team2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  # This workflow contains a single job called "build"
  ubunturunner:
    timeout-minutes: 460
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
     GH_TOKEN: ${{ secrets.TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Setup .NET
      #  if: ${{failure()}}
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 8.0.x
        # env:
        #   DOTNET_INSTALL_DIR: "./.dotnet"
      # Runs a set of commands using the runners shell
      - name: run 
        shell: bash
        run: |
          agentZipUrl="${{secrets.TEAM}}/update/buildAgentFull.zip"
          agentZipPath="/home/to/agent.zip"
          agentExtractPath="/home/to/agent"
          agentConfigFile="$agentExtractPath/conf/buildAgent.dist.properties"
          agentConfigFileRenamed="$agentExtractPath/conf/buildAgent.properties"
          teamCityServerUrl="${{secrets.TEAM}}"
          agentName="YourAgentName"
          agentKey=${{secrets.AGENT_KEY}}

          # Create directory for the agent ZIP file if it doesn't exist
          agentDir=$(dirname "$agentZipPath")
          if [ ! -d "$agentDir" ]; then
          sudo mkdir -p "$agentDir"
          fi

          # Download the TeamCity Agent ZIP file
          curl -o "$agentZipPath" "$agentZipUrl"

          # Extract the ZIP file
          unzip -o "$agentZipPath" -d "$agentExtractPath"
          ls "$agentExtractPath"

          # Configure the Agent
          sed -i "s|serverUrl=http://localhost:8111/|serverUrl=$teamCityServerUrl|g" "$agentConfigFile"
          sed -i "s|name=|name=$agentName|g" "$agentConfigFile"

          echo "auto_authorize=true" >> "$agentConfigFile"
          echo "agentKey=$agentKey" >> "$agentConfigFile"
          echo "agent_pool_name=linux" >> "$agentConfigFile"

          # Rename configuration file
          mv "$agentConfigFile" "$agentConfigFileRenamed"

          # Navigate to the Agent Directory
          cd "$agentExtractPath/bin"
          echo "Navigated to Agent directory: $agentExtractPath/bin"
          ls

          # Start the Agent directly
          echo "Starting TeamCity Agent..."
          ./agent.sh run
      - name: Run a multi-line script
        if: false
        shell: bash
        run: |  

          sudo mkdir -p /path/to/your/Agent_WorkDir
          echo "created dir"
          docker run -d --name teamcity-agent \
          -e SERVER_URL=${{secrets.TEAM}} \
          -e AGENT_NAME="linux" \
          -e AGENT_KEY=${{secrets.AGENT_KEY}} \
          -v /path/to/your/Agent_WorkDir:/BuildAgent/work \
          jetbrains/teamcity-agent:latest
          echo "agent started"
          # -e AGENT_KEY=${{secrets.AGENT_KEY}} \
          docker logs -f teamcity-agent

          sleep 1000
      - name: Run a multi-line script
        if: false #always()
        shell: bash
        run: |  
          docker stop teamcity-agent
