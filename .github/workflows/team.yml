name: team

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  # This workflow contains a single job called "build"
  windowsrunner:
    timeout-minutes: 500
    # The type of runner that the job will run on
    runs-on: windows-latest
    env:
     GH_TOKEN: ${{ secrets.TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Setup .NET
      #  if: ${{failure()}}
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 8.0.x
        # env:
        #   DOTNET_INSTALL_DIR: "./.dotnet"
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        shell: pwsh
        run: |  
          # Invoke-WebRequest -Uri https://dot.net/v1/dotnet-install.ps1 -OutFile dotnet-install.ps1
          # .\dotnet-install.ps1 -Version 8.0 -InstallDir "C:\dotnet"
          [System.Environment]::SetEnvironmentVariable("PATH", $Env:PATH + ";C:\dotnet", [System.EnvironmentVariableTarget]::Machine)
          [System.Environment]::SetEnvironmentVariable("DOTNET_ROOT", "C:\dotnet", [System.EnvironmentVariableTarget]::Machine)

          mkdir "C:\path\to\your\Agent_WorkDir"
          echo "created dir"
          docker run -d --name teamcity-agent `
          -e SERVER_URL=${{secrets.TEAM}} `
          -e AGENT_NAME="windows" `
          -v "C:\path\to\your\Agent_WorkDir:C:\BuildAgent\work" `
          jetbrains/teamcity-agent:latest # -windowsservercore
          echo "agent started"
            docker logs -f teamcity-agent

            sleep 1000
