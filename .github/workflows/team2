name: team2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  # This workflow contains a single job called "build"
  ubunturunner:
    timeout-minutes: 500
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
     GH_TOKEN: ${{ secrets.TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Setup .NET
      #  if: ${{failure()}}
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 8.0.x
        # env:
        #   DOTNET_INSTALL_DIR: "./.dotnet"
      # Runs a set of commands using the runners shell
- name: Run a multi-line script
  shell: bash
  run: |  
    #git lfs uninstall
    # Download and install .NET (uncomment if needed)
    # wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
    # chmod +x dotnet-install.sh
    # ./dotnet-install.sh --version 8.0 --install-dir "/opt/dotnet"
    export PATH=$PATH:/opt/dotnet
    export DOTNET_ROOT=/opt/dotnet

    mkdir -p /path/to/your/Agent_WorkDir
    echo "created dir"
    docker run -d --name teamcity-agent \
      -e SERVER_URL=${{secrets.TEAM}} \
      -e AGENT_NAME="linux" \
      -v /path/to/your/Agent_WorkDir:/BuildAgent/work \
      jetbrains/teamcity-agent:latest
    echo "agent started"
    docker logs -f teamcity-agent

    sleep 1000
- name: Run a multi-line script
  if: always()
  shell: bash
  run: |  
    docker stop teamcity-agent
